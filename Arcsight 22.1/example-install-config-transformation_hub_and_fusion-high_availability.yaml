# Transformation Hub high availability installation configuration
#
# This example configures all components required by Transformation Hub.
#
# Before using this example, you must do the following:
# - Replace the hostname "yourdomain-*.yourenterprise.net" with the correct values for your environment.
# - Set the values of arcmc-generator-id-start and arcmc-generator-id-end to form a valid Generator ID Range
#     Generator ID Range: set a valid range within [1-16383]. 
#     The difference between the values must be more than 100.
#
# Key aspects of this configuration are:
# - Encryption: yes
# - Transformation Hub TLS Client Auth: yes
# - FIPS 140 mode: yes
# - High Availability: yes
#
# This configuration deploys an HA (high availability) system:
# - Kubernetes cluster has 3 master nodes so that it can tolerate a failure of a single master and still
#      maintain master node quorum
# - A FQDN hostname for a virtual IP is used so that clients accessing master nodes have a single reliable
#      hostname to connect to that will shift to whatever is the current primary master node.
# - Kubernetes cluster has 3 worker nodes
#     - Transformation Hub's Kafka is deployed to all 3 worker nodes with data replication enabled (1 original, 1 copy)
#        so that it can tolerate a failure of a single node and still remain operational.
#     - Transformation Hub's ZooKeeper is deployed to all 3 worker nodes with data replication across the 3 nodes
#        so that it can tolerate a failure of a single node and still remain operational.
#     - Transformation Hub's processing services are allocated across 2 worker nodes so that, if one of the nodes
#        fails, Kubernetes can move all of the components to the other node and still remain operational.
#     - Transformation Hub's platform services are allocated across 2 worker nodes so that, if one of the nodes
#        fails, Kubernetes can move all of the components to the other node and still remain operational.
# - For the NFS configuration, use an NFS server that has high availability capabilities so that it is not a single
#     point of failure.
#
cluster:
  default-node-size: small
  # allow-worker-on-master: false
  enable-fips: true
  # The value of this property must be a hostname, not an IP address
  virtual-ip-address: yourdomain-ha.yourenterprise.net
  master-nodes:
    - hostname: yourdomain-masternode1.yourenterprise.net
      username: root
    - hostname: yourdomain-masternode2.yourenterprise.net
      username: root
    - hostname: yourdomain-masternode3.yourenterprise.net
      username: root
  worker-nodes:
    - hostname: yourdomain-workernode1.yourenterprise.net
      username: root
      labels: [zk, kafka, fusion]
    - hostname: yourdomain-workernode2.yourenterprise.net
      username: root
      labels: [zk, kafka, th-processing, th-platform, fusion]
    - hostname: yourdomain-workernode3.yourenterprise.net
      username: root
      labels: [zk, kafka, th-processing, th-platform, fusion]


suite:
  products: [transformationhub, fusion]
  config-params:
    # Transformation Hub, defaults are commented
    # th-kafka-count: 3
    # th-zookeeper-count: 3
    # th-init-topicReplicationFactor: 2
    # th-init-kafkaOffsetsTopicReplicationFactor: 3
    # th-schema-registry-count: 3
    # th-init-fips: true
    # enrichment-processor1-replicas: 2
    # th-enrichment-processor-integrity-enabled: false
    th-kafka-allow-plaintext: false
    th-init-client-auth: true
    # Fusion
    vertica-enable: false
    # Generator ID parameters are mandatory parameters.
    # Ensure that you set arcmc-generator-id-enable to true.
    arcmc-generator-id-start: 
    arcmc-generator-id-end: 
    arcmc-generator-id-enable: true

nfs:
  node:
    hostname: yourdomain-nfs.yourenterprise.net
    username: root
  type: preconfigured
  root-folder: /opt/arcsight-nfs
  uid: 1999
  gid: 1999
